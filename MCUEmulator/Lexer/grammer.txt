Терминалы
COMMAND -> "^MOV | ADD | SUB | MUL | DIV | INC | DEC | BT | BTR | BTS | CMP$"		//команда



DIGIT -> "^ 0 | ([1-9]{1}[0-9]*)$"	//числа
COM -> "^,$"				//запятая
COMMA -> "^;$"				//завершение команды
CH_SPACE -> "^ $"			//пробел
L_SB -> "^[$"				//левая квадратная скобка
R_SB -> "^]$"				//правая квадратная скобка


MOV ax, [5]
ADD ax, [b]
--------------------------------------------------------
Режимы адресации - это различные способы указания местоположения операндов.
Операнды находятся в регистирах или в переменных в памяти.

Неявная адресация: 		MUL al 		//у команды MUL фиксировано положение первого множителя и результата

Непосредственная адресация:	MOV al, 5
				ADD bx, 1234h	//значение операнда является частью машинной команды. Операнд = константа

Абсолютная прямая адресация:	MOV dx, [a]	//в машинной команде содержиться адрес операнда, находящегося в памяти
						//в dx помещается значение из памяти по адресу а
						//квадратные скобки обозначают обращение по адресу, указанному внутри этих скобок

Отностительная прямая адресация:  metka:
					...
					loop metka   //используется в командах передачи управления.
							//в машиной команде содержиться смещение, которое прибавляется к значению
							//указателя команд IP. то есть указывается не сам адрес перехода, а на
							//сколько байтов вперед или назад надо перейти

Регистровая адресация: 		ADD ax, bx	//операнд находится в регистре

Косвенная регистровая адресация:	add ax,[bx]
(базовая)  				mov dl,[si]

Косвенная базовая индексная 		mov ax,[bp+si]
адресация: